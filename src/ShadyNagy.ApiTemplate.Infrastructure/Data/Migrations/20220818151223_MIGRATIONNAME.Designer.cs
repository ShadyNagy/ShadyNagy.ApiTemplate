// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShadyNagy.ApiTemplate.Infrastructure.Data;

#nullable disable

namespace ShadyNagy.ApiTemplate.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220818151223_MIGRATIONNAME")]
    partial class MIGRATIONNAME
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Address");

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityId");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Phone");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Branches", "Lockup");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CountryId");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities", "Lockup");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.CityTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CityTranslations", "Lockup");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries", "Lockup");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.CountryTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CountryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LanguageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CountryTranslations", "Lockup");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.Language", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Languages", "Lockup");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Password");

                    b.Property<int>("UserInfoId")
                        .HasColumnType("int");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("UserType");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.HasIndex("UserInfoId")
                        .IsUnique();

                    b.ToTable("Users", "Lockup");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Address");

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityId");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("UserInfos", "Lockup");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.Branch", b =>
                {
                    b.HasOne("ShadyNagy.ApiTemplate.Core.Entities.City", "City")
                        .WithMany("Branches")
                        .HasForeignKey("CityId")
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.City", b =>
                {
                    b.HasOne("ShadyNagy.ApiTemplate.Core.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.CityTranslation", b =>
                {
                    b.HasOne("ShadyNagy.ApiTemplate.Core.Entities.City", "City")
                        .WithMany("CityTranslations")
                        .HasForeignKey("CityId")
                        .IsRequired();

                    b.HasOne("ShadyNagy.ApiTemplate.Core.Entities.Language", "Language")
                        .WithMany("CityTranslations")
                        .HasForeignKey("LanguageId")
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.CountryTranslation", b =>
                {
                    b.HasOne("ShadyNagy.ApiTemplate.Core.Entities.Country", "Country")
                        .WithMany("CountryTranslations")
                        .HasForeignKey("CountryId")
                        .IsRequired();

                    b.HasOne("ShadyNagy.ApiTemplate.Core.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.User", b =>
                {
                    b.HasOne("ShadyNagy.ApiTemplate.Core.Entities.UserInfo", "UserInfo")
                        .WithOne("User")
                        .HasForeignKey("ShadyNagy.ApiTemplate.Core.Entities.User", "UserInfoId")
                        .IsRequired();

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.UserInfo", b =>
                {
                    b.HasOne("ShadyNagy.ApiTemplate.Core.Entities.City", "City")
                        .WithMany("UserInfos")
                        .HasForeignKey("CityId")
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.City", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("CityTranslations");

                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("CountryTranslations");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.Language", b =>
                {
                    b.Navigation("CityTranslations");
                });

            modelBuilder.Entity("ShadyNagy.ApiTemplate.Core.Entities.UserInfo", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
